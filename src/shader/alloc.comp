R"===(

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

uniform u32 start;
uniform u32 alloc_size;
uniform layout(binding = 0, r32ui) uimageBuffer octree_nodes;
uniform layout(binding = 0, offset = 0) atomic_uint alloc_count;

void main()
{
    u32 tid = (gl_WorkGroupID.y * gl_NumWorkGroups.x + gl_WorkGroupID.x) * 64 + gl_LocalInvocationIndex;
    u32 idx = start + tid;
    if (idx < alloc_size)
    {
        u32 val = imageLoad(octree_nodes, s32(idx)).r;
        if ((val & 0x80000000) != 0)
        {
            u32 next_empty = (atomicCounterIncrement(alloc_count) << 3);
            val |= next_empty;
            imageStore(octree_nodes, s32(idx), uv4(val, 0, 0, 0));
        }
    }
}

)===";
